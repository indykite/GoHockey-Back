# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from go_gretzky.models.base_model_ import Model
from go_gretzky import util


class UserSubscriptionBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, _from: datetime=None, to: datetime=None, sku: List[str]=None, child: str=None):  # noqa: E501
        """UserSubscriptionBody - a model defined in Swagger

        :param _from: The _from of this UserSubscriptionBody.  # noqa: E501
        :type _from: datetime
        :param to: The to of this UserSubscriptionBody.  # noqa: E501
        :type to: datetime
        :param sku: The sku of this UserSubscriptionBody.  # noqa: E501
        :type sku: List[str]
        :param child: The child of this UserSubscriptionBody.  # noqa: E501
        :type child: str
        """
        self.swagger_types = {
            '_from': datetime,
            'to': datetime,
            'sku': List[str],
            'child': str
        }

        self.attribute_map = {
            '_from': 'from',
            'to': 'to',
            'sku': 'sku',
            'child': 'child'
        }
        self.__from = _from
        self._to = to
        self._sku = sku
        self._child = child

    @classmethod
    def from_dict(cls, dikt) -> 'UserSubscriptionBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The user_subscription_body of this UserSubscriptionBody.  # noqa: E501
        :rtype: UserSubscriptionBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _from(self) -> datetime:
        """Gets the _from of this UserSubscriptionBody.


        :return: The _from of this UserSubscriptionBody.
        :rtype: datetime
        """
        return self.__from

    @_from.setter
    def _from(self, _from: datetime):
        """Sets the _from of this UserSubscriptionBody.


        :param _from: The _from of this UserSubscriptionBody.
        :type _from: datetime
        """

        self.__from = _from

    @property
    def to(self) -> datetime:
        """Gets the to of this UserSubscriptionBody.


        :return: The to of this UserSubscriptionBody.
        :rtype: datetime
        """
        return self._to

    @to.setter
    def to(self, to: datetime):
        """Sets the to of this UserSubscriptionBody.


        :param to: The to of this UserSubscriptionBody.
        :type to: datetime
        """

        self._to = to

    @property
    def sku(self) -> List[str]:
        """Gets the sku of this UserSubscriptionBody.


        :return: The sku of this UserSubscriptionBody.
        :rtype: List[str]
        """
        return self._sku

    @sku.setter
    def sku(self, sku: List[str]):
        """Sets the sku of this UserSubscriptionBody.


        :param sku: The sku of this UserSubscriptionBody.
        :type sku: List[str]
        """

        self._sku = sku

    @property
    def child(self) -> str:
        """Gets the child of this UserSubscriptionBody.


        :return: The child of this UserSubscriptionBody.
        :rtype: str
        """
        return self._child

    @child.setter
    def child(self, child: str):
        """Sets the child of this UserSubscriptionBody.


        :param child: The child of this UserSubscriptionBody.
        :type child: str
        """

        self._child = child
