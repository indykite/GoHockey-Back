# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from go_gretzky.models.base_model_ import Model
from go_gretzky import util


class UserChildBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, given_name: str=None, year_of_birth: int=None, gender: str=None, cloth_size: int=None, shoe_size: int=None, helmet_size: int=None):  # noqa: E501
        """UserChildBody - a model defined in Swagger

        :param given_name: The given_name of this UserChildBody.  # noqa: E501
        :type given_name: str
        :param year_of_birth: The year_of_birth of this UserChildBody.  # noqa: E501
        :type year_of_birth: int
        :param gender: The gender of this UserChildBody.  # noqa: E501
        :type gender: str
        :param cloth_size: The cloth_size of this UserChildBody.  # noqa: E501
        :type cloth_size: int
        :param shoe_size: The shoe_size of this UserChildBody.  # noqa: E501
        :type shoe_size: int
        :param helmet_size: The helmet_size of this UserChildBody.  # noqa: E501
        :type helmet_size: int
        """
        self.swagger_types = {
            'given_name': str,
            'year_of_birth': int,
            'gender': str,
            'cloth_size': int,
            'shoe_size': int,
            'helmet_size': int
        }

        self.attribute_map = {
            'given_name': 'given_name',
            'year_of_birth': 'year_of_birth',
            'gender': 'gender',
            'cloth_size': 'cloth_size',
            'shoe_size': 'shoe_size',
            'helmet_size': 'helmet_size'
        }
        self._given_name = given_name
        self._year_of_birth = year_of_birth
        self._gender = gender
        self._cloth_size = cloth_size
        self._shoe_size = shoe_size
        self._helmet_size = helmet_size

    @classmethod
    def from_dict(cls, dikt) -> 'UserChildBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The user_child_body of this UserChildBody.  # noqa: E501
        :rtype: UserChildBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def given_name(self) -> str:
        """Gets the given_name of this UserChildBody.


        :return: The given_name of this UserChildBody.
        :rtype: str
        """
        return self._given_name

    @given_name.setter
    def given_name(self, given_name: str):
        """Sets the given_name of this UserChildBody.


        :param given_name: The given_name of this UserChildBody.
        :type given_name: str
        """

        self._given_name = given_name

    @property
    def year_of_birth(self) -> int:
        """Gets the year_of_birth of this UserChildBody.


        :return: The year_of_birth of this UserChildBody.
        :rtype: int
        """
        return self._year_of_birth

    @year_of_birth.setter
    def year_of_birth(self, year_of_birth: int):
        """Sets the year_of_birth of this UserChildBody.


        :param year_of_birth: The year_of_birth of this UserChildBody.
        :type year_of_birth: int
        """

        self._year_of_birth = year_of_birth

    @property
    def gender(self) -> str:
        """Gets the gender of this UserChildBody.


        :return: The gender of this UserChildBody.
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender: str):
        """Sets the gender of this UserChildBody.


        :param gender: The gender of this UserChildBody.
        :type gender: str
        """

        self._gender = gender

    @property
    def cloth_size(self) -> int:
        """Gets the cloth_size of this UserChildBody.


        :return: The cloth_size of this UserChildBody.
        :rtype: int
        """
        return self._cloth_size

    @cloth_size.setter
    def cloth_size(self, cloth_size: int):
        """Sets the cloth_size of this UserChildBody.


        :param cloth_size: The cloth_size of this UserChildBody.
        :type cloth_size: int
        """

        self._cloth_size = cloth_size

    @property
    def shoe_size(self) -> int:
        """Gets the shoe_size of this UserChildBody.


        :return: The shoe_size of this UserChildBody.
        :rtype: int
        """
        return self._shoe_size

    @shoe_size.setter
    def shoe_size(self, shoe_size: int):
        """Sets the shoe_size of this UserChildBody.


        :param shoe_size: The shoe_size of this UserChildBody.
        :type shoe_size: int
        """

        self._shoe_size = shoe_size

    @property
    def helmet_size(self) -> int:
        """Gets the helmet_size of this UserChildBody.


        :return: The helmet_size of this UserChildBody.
        :rtype: int
        """
        return self._helmet_size

    @helmet_size.setter
    def helmet_size(self, helmet_size: int):
        """Sets the helmet_size of this UserChildBody.


        :param helmet_size: The helmet_size of this UserChildBody.
        :type helmet_size: int
        """

        self._helmet_size = helmet_size
